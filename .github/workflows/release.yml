name: Release Please

on:
  push:
    branches:
      - main
      - '[0-9]+.[0-9]+.x'
  workflow_dispatch:

defaults:
  run:
    shell: bash

env:
  GO_VERSION: "~1.20"
  # renovate: datasource=github-releases depName=kubernetes-sigs/controller-tools
  CONTROLLER_TOOLS_VERSION: "v0.12.1"
  SCHEDULER_COMPATIBLE_K8S_VERSION: "v0.24.3"
  PUBLISHABLE_ITEMS: '[".", "lifecycle-operator", "metrics-operator", "klt-cert-manager", "runtimes/deno-runtime", "runtimes/python-runtime"]'

jobs:
  release-please:
    runs-on: ubuntu-22.04
    outputs:
      klt-release-created: ${{ steps.release.outputs.release_created }}
      klt-tag-name: ${{ steps.release.outputs.tag_name }}
      cert-manager-release-created: ${{ steps.release.outputs.klt-cert-manager--release_created }}
      cert-manager-tag-name: ${{ steps.release.outputs.klt-cert-manager--tag_name }}
      metrics-operator-release-created: ${{ steps.release.outputs.metrics-operator--release_created }}
      metrics-operator-tag-name: ${{ steps.release.outputs.metrics-operator--tag_name }}
      releases-created: ${{ steps.release.outputs.releases_created }}
      build-matrix: ${{ steps.build-matrix.outputs.result }}
    steps:
      - name: Install monitor action
        uses: GitHubSecurityLab/actions-permissions/monitor@v1

      - name: Checkout
        uses: actions/checkout@v3

      - name: Run release please
        uses: google-github-actions/release-please-action@v3
        id: release
        with:
          command: manifest
          token: ${{ secrets.PAT }}
          default-branch: main
          signoff: "keptn-bot <86361500+keptn-bot@users.noreply.github.com>"

      - name: Debug info
        env:
          CHANGED_ITEMS: ${{ steps.release.outputs.paths_released }}
          KLT_TAG: ${{ steps.release.outputs.tag_name }}
          PATHS_RELEASED: ${{ steps.release.outputs.paths_released }}
          ARTIFACT_TAG_NAME: ${{ steps.release.outputs[format('{0}--tag_name', steps.release.outputs.paths_released[0])] }}
          FULL_RELEASE_OUTPUT: ${{ toJSON(steps.release.outputs) }}
        run: |
          echo "FULL RELEASE OUTPUT: ${FULL_RELEASE_OUTPUT}"
          echo "CHANGED_ITEMS: ${CHANGED_ITEMS}"
          echo "KLT_TAG: ${KLT_TAG}"
          echo "ARTIFACT_TAG_NAME: ${ARTIFACT_TAG_NAME}"
          echo "PATHS_RELEASED: ${PATHS_RELEASED}"
          echo "CERT_MANAGER_TAG_NAME: ${{ steps.release.outputs.klt-cert-manager--tag_name }}"
          echo "KLT_TAG_NAME: ${{ steps.release.outputs.tag_name }}"
          echo "METRICS_OPERATOR_TAG_NAME: ${{ steps.release.outputs.metrics-operator--tag_name }}"
          echo "DENO_RUNTIME_TAG_NAME: ${{ steps.release.outputs.runtimesdeno-runtime--tag_name }}"
          echo "PYTHON_RUNTIME_TAG_NAME: ${{ steps.release.outputs.runtimespython-runtime--tag_name }}"

      - name: Create release matrix
        id: build-matrix
        uses: actions/github-script@v6
        env:
          CHANGED_ITEMS: ${{ steps.release.outputs.paths_released }}
          KLT_TAG: ${{ steps.release.outputs.tag_name }}
          ARTIFACT_TAG_NAME: ${{ steps.release.outputs[format('{0}--tag_name', steps.release.outputs.paths_released[0])] }}
        with:
          script: |
            const changedItems = JSON.parse(process.env.CHANGED_ITEMS || '[]');
            console.log("changed items", changedItems);
            const eligibleItems = JSON.parse(process.env.PUBLISHABLE_ITEMS || '[]');
            console.log("eligible items", eligibleItems);
            const itemsToPublish = changedItems.filter(i => eligibleItems.includes(i));
            console.log("items to publish", itemsToPublish);

            console.log("setting up build matrix...");
            const releaseMatrix = itemsToPublish.map(item => {
                switch (item) {
                    case "lifecycle-operator":
                        return [
                            {
                                name: item,
                                folder: item,
                                tagName: process.env.ARTIFACT_TAG_NAME
                            },
                            {
                                name: "scheduler",
                                folder: "scheduler/",
                                tagName: process.env.ARTIFACT_TAG_NAME
                            }
                        ];
                    case "metrics-operator":
                    case "klt-cert-manager":
                        return [{
                            name: item,
                            folder: item,
                            tagName: process.env.ARTIFACT_TAG_NAME
                        }];
                    case "runtimes/deno-runtime":
                    case "runtimes/python-runtime":
                        return [{
                            name: item.replace("runtimes/", ""),
                            folder: item,
                            tagName: process.env.ARTIFACT_TAG_NAME
                        }];
                    case ".":
                    default:
                        return [];
                }
            });
            return { config: releaseMatrix };
